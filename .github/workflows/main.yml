# gitactions의 이름
name: helloGithubAction

# push 했을 때 jobs에 있는 이벤트를 실행할 것이다.
# [push, pull_request] 등과 같이 다중 이벤트 처리 가능 (어떤 이벤트가 있는지는 공식문서 참고)
on: [push]

# 위 이벤트가 일어났을 경우 실행될 job, 여러개 설정 가능.
jobs:
  # build : 작업 단위 
  build:
    # runs-on : 어디서 구동할 지 명시. windows나 mac os도 가능. 버전도 선택 가능
    runs-on: ubuntu-latest
    steps:
      # uses: 다른 사람이 만들어놓은 actions를 가지고 오는 것.
      # https://github.com/actions/checkout 참고
      # marketplace에서 여러 uses를 가지고 올 수 있음
      # actions/checkout : 아무것도 없는 OS에서 자동으로 우리의 코드를 클론하고 다운받아 실행하게 해주는 소스코드
      # 즉, actions/checkout@v2를 사용하지 않으면 아무것도 없는 OS에서 test.py를 실행하려 하므로 에러가 발생한다. 
      # 이 uses를 해야 내가 작성한 소스코드가 OS 안으로 들어가게 된다.
    - uses: actions/checkout@v2
      with:
        lfs: true
        token: ${{ secrets.GITHUB_TOKEN }}
        # 개인 토큰을 사용할 것인지 말 것인지
        #persist-credentials: false 
    - name: 1. pip 업그레이드
      run: python -m pip install --upgrade pip
    - name: 2. 필요한 패키지 인스톨
      run: pip install -r requirements.txt
    - name: 3. 파이썬 실행!!
      run: python test.py
    - name: Commit files
      run: | # 파이프를 사용하면 여러가지 명령어를 같이 쓸 수 있음.
        git config --local user.email "paullabkorea@gmail.com"
        git config --local user.name "paullabkorea"
        git add .
        git commit -m "Run crawler and update current data"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        # branch: "master" # 이 라인을 활성화하면 해당 브랜치를 생성한다.
        github_token: ${{ secrets.GITHUB_TOKEN }}
      
